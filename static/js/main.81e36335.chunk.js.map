{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","db","getFirestore","auth","getAuth","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","console","log","target","value","name","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","result","Nweet","nweetObj","isOwner","creatorId","text","isEditing","setIsEditing","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","nweetTextRef","doc","id","deleteDoc","attachmentUrl","urlRef","ref","deleteObject","toggleEditing","updateDoc","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","v4","uploadString","response","getDownloadURL","nweetPosting","createdAt","Date","now","addDoc","collection","docRef","onClearAttachmentClick","fileInput","useRef","current","maxLength","accept","files","theFile","reader","FileReader","readAsDataURL","onloadend","currentTarget","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","Navigation","to","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","navigate","useNavigate","getMyNweets","where","getDocs","forEach","updateProfile","currentUser","signOut","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81e36335.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {getStorage} from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n//export const app = initializeApp(firebaseConfig);\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore(app);\r\n\r\nexport const auth = getAuth(app);\r\n\r\nexport const storageService = getStorage();\r\n","import React, {useState} from \"react\";\r\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword} from \"@firebase/auth\";\r\nimport {auth} from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        console.log(\"e.target.value:\", e.target.value);\r\n        const {\r\n            target: {name, value},\r\n        } = e;\r\n        if (name === \"email\") setEmail(value);\r\n        if (name === \"password\") setPassword(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"email, password ...\", email, password);\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await createUserWithEmailAndPassword(auth, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(auth, email, password);\r\n            }\r\n            console.log(\"data:\", data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            console.log(\"login error\", error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Pathword\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign In...\" : \"Create Account\"}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {GithubAuthProvider, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\r\nimport React from \"react\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport {auth} from \"../fbase\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        try {\r\n            if (name === \"google\") {\r\n                provider = new GoogleAuthProvider();\r\n            }\r\n            if (name === \"github\") {\r\n                provider = new GithubAuthProvider();\r\n            }\r\n            console.log(\"000000======>\", provider);\r\n            //\r\n            const result = await signInWithPopup(auth, provider);\r\n            //\r\n            console.log(\"1111111======>\", provider);\r\n            console.log(\"result:\", result);\r\n        } catch (error) {\r\n            console.log(\"ERROR:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import {deleteDoc, doc, updateDoc} from \"@firebase/firestore\";\r\nimport React, {useState} from \"react\";\r\nimport {db, storageService} from \"../fbase\";\r\nimport {deleteObject, ref} from \"@firebase/storage\";\r\n\r\n// called each nweet message from Home.js... map\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    console.log(\"nweetObj.creatorId called from Home.js ...\", nweetObj.creatorId);\r\n    console.log(\"nweetObj.text called from Home.js ...\", nweetObj.text);\r\n    console.log(\"isOwner ???\", isOwner);\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        console.log(\"window.confirm OK???\", ok);\r\n        if (ok) {\r\n            // Firebase데이터베이스에서 doc(Delete literal)삭제\r\n            //const nweetTextRef = doc(db, \"nweets\", `${nweetObj.id}`);\r\n            const nweetTextRef = doc(db, `nweets/${nweetObj.id}`);\r\n            await deleteDoc(nweetTextRef);\r\n\r\n            // Firebase Storage에서 ref(url)삭제. 있는 경우에 삭제 필요\r\n            if (nweetObj.attachmentUrl) {\r\n                const urlRef = ref(storageService, nweetObj.attachmentUrl);\r\n                await deleteObject(urlRef);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setIsEditing((prev) => !prev);\r\n\r\n    const onChangeClick = (e) => {\r\n        const {\r\n            target: {value},\r\n        } = e;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"onSubmit -nweetobj - newNweet\", nweetObj, newNweet);\r\n\r\n        const nweetTextRef = doc(db, \"nweets\", `${nweetObj.id}`);\r\n        await updateDoc(nweetTextRef, {text: newNweet});\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isEditing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            onChange={onChangeClick}\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet!!</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet...</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, {useRef, useState} from \"react\";\r\nimport {collection, addDoc} from \"firebase/firestore\";\r\nimport {ref, uploadString, getDownloadURL} from \"firebase/storage\";\r\nimport {v4} from \"uuid\";\r\nimport {db, storageService} from \"../fbase\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`); //uuid package문법\r\n            const response = await uploadString(attachmentRef, attachment, \"data_url\");\r\n            console.log(\"response\", response);\r\n            attachmentUrl = await getDownloadURL(response.ref);\r\n        }\r\n\r\n        const nweetPosting = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        const docRef = await addDoc(collection(db, \"nweets\"), nweetPosting);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        console.log(\"Document - Succeed: \", docRef);\r\n        onClearAttachmentClick(); // UseRef사용하여 Nweet후에 남는 파일이름 삭제\r\n    };\r\n\r\n    const onChange = ({target: {value}}) => {\r\n        setNweet(value);\r\n    };\r\n\r\n    //   const onChange = (e) => {\r\n    //     const {\r\n    //       target: { value },\r\n    //     } = e;\r\n    //     setNweet(value);\r\n    //   };\r\n\r\n    const onFileChange = (e) => {\r\n        console.log(\"images ...\", e.target.files);\r\n        const {\r\n            target: {files},\r\n        } = e;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(theFile);\r\n        reader.onloadend = (e) => {\r\n            console.log(\"finishedEvent:\", e);\r\n            const {\r\n                currentTarget: {result},\r\n            } = e;\r\n            setAttachment(result);\r\n        };\r\n    };\r\n\r\n    /* UseRef사용하여 clear후에 남는 파일이름 삭제  */\r\n    const fileInput = useRef();\r\n    const onClearAttachmentClick = () => {\r\n        fileInput.current.value = \"\";\r\n        setAttachment(null);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>Home</div>\r\n            <input\r\n                onChange={onChange}\r\n                value={nweet}\r\n                type=\"text\"\r\n                placeholder=\"What is on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\" />\r\n                    <button onClick={onClearAttachmentClick}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    collection,\r\n    query,\r\n    // getDocs,\r\n    // getFirestore,\r\n    orderBy,\r\n    onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nimport Nweet from \"../components/Nweet\";\r\nimport {db} from \"../fbase\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\n\r\n// from Router.js\r\nconst Home = ({userObj}) => {\r\n    console.log(\"-----------> user\", userObj.uid);\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    // const getNweets = async () => {\r\n    //   console.log(\"====>Start\");\r\n    //   const q = query(collection(db, \"nweets\"));\r\n    //   const querySnapshot = await getDocs(q);\r\n    //   querySnapshot.forEach((doc) => {\r\n    //     const nweetObj = {\r\n    //       ...doc.data(),\r\n    //       id: doc.id,\r\n    //     };\r\n    //     setNweets((prev) => [nweetObj, ...prev]);\r\n    //   });\r\n    //   console.log(nweets);\r\n    //   console.log(\"====>END\");\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // 실시간으로 데이터를 데이터베이스에서 가져오기\r\n        const q = query(\r\n            //collection(getFirestore(), \"nweets\"), //db=getFirestore()가 fbase.js에서 export 되어있다\r\n            collection(db, \"nweets\"),\r\n            // where('text', '==', 'hehe') // where뿐만아니라 각종 조건 이 영역에 때려부우면 됨\r\n            orderBy(\"createdAt\")\r\n        );\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const newArray = querySnapshot.docs.map((doc) => {\r\n                return {\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                };\r\n            });\r\n\r\n            setNweets(newArray);\r\n            console.log(\"Current tweets in CA: \", newArray);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* 로그인-계정 */}\r\n            <NweetFactory userObj={userObj} />\r\n\r\n            {/* 리스팅 */}\r\n            <div>\r\n                {nweets.map((e) => (\r\n                    <Nweet key={e.id} nweetObj={e} isOwner={e.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    console.log(\"userObj@Navigation\", userObj);\r\n    return (\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\">Profile:{userObj.displayName}</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {collection, getDocs, query, where, orderBy} from \"firebase/firestore\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n//import { useNavigate } from \"react-router\"; //useHistory, push 사용불가\r\n\r\nimport {auth, db} from \"../fbase\";\r\nimport {updateProfile} from \"firebase/auth\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const navigate = useNavigate();\r\n    const onLogOutClick = () => {\r\n        auth.signOut();\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const q = query(\r\n            collection(db, \"nweets\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            orderBy(\"createdAt\")\r\n        );\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            console.log(doc.id, \" 11=> \", doc.data());\r\n        });\r\n        //체크목적=위와 동일함.\r\n        querySnapshot.docs.map((doc) => {\r\n            console.log(doc.id, \" 22=> \", doc.data());\r\n            return null;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: {value},\r\n        } = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"newDisplayName===>\", newDisplayName);\r\n\r\n        if (userObj) {\r\n            if (userObj.displayName === null) {\r\n                // await updateProfile(userObj, {displayName: \"Anonymous\"});\r\n                await updateProfile(auth.currentUser, {displayName: \"Anonymous\"});\r\n            }\r\n            if (userObj.displayName !== newDisplayName) {\r\n                // await updateProfile(userObj, {displayName: newDisplayName}); =>에러(아래수정)\r\n                await updateProfile(auth.currentUser, {displayName: newDisplayName});\r\n            }\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\n\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"../routes/Profile\";\r\n// import Auth from 'routes/Auth';\r\n// import Home from 'routes/Home';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    console.log(\"userObj@Router\", userObj);\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Routes>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\" element={<Home userObj={userObj} />} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/profile\"\r\n                            element={<Profile userObj={userObj} refreshUser={refreshUser} />}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\" element={<Auth />}></Route>\r\n                )}\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"./Router\";\nimport {auth} from \"../fbase\";\nimport {onAuthStateChanged} from \"firebase/auth\";\n\nfunction App() {\n    console.log(\"auth.r..\", auth);\n    console.log(\"auth.currentUser..\", auth.currentUser);\n\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false); //이것 대신 AppROuter 속성을 조정할 수 있음...\n    const [userObj, setUserObj] = useState(\"\");\n\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                //setUserObj(user); //너무 많이 불러오므로, 이를 제한할 필요가 있다.\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    //updateProfile: (args) => user.updateProfile(args),\n                });\n                console.log(\"userObj ...\", userObj);\n            } else {\n                setIsLoggedIn(false);\n            }\n            setInit(true);\n            console.log(\"useEffect changed ...\", user);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = auth.currentUser;\n        //setUserObj(auth.currentUser); //여기에서도 불러오는 대상을 아래와 같이 제한한다.\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            //updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    return (\n        <>\n            {init ? (\n                <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} />\n            ) : (\n                \"Initializing\"\n            )}\n            {/* {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing\" } */}\n\n            <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}